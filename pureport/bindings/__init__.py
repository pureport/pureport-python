# -*- coding: utf-8 -*_
#
# Copyright (c) 2020, Pureport, Inc.
# All Rights Reserved
#
"""
The bindings module dynamically generates Python objects from the
Pureport OpenAPI specification retrieved from the Pureport API.  There
are three types of bindings that get generated.

First this module will generate a set of typed model classes based on the
OpenAPI schema retrieved from the Pureport API.  The model classes are only
generated once and are available from `pureport.bindings.models`.  To
create an instance of a model once the bindings have been generated,
simply import the module and create a class instance.

    .. code-block:: python

        >>> from pureport import session, credentials, bindings
        >>> s = session.Session(*credentials.default())
        >>> bindings.make(s)
        >>> bindings.models.Network('pureoprt')
        <pureport.bindings.models.Network object at 0x7f95cc4be730>


After the models have been generated, this module wil create function and
query bindings and attach them to the provided session instance.
Functions are generated based on the `operationId` in the Pureport
OpenAPI specification.

.. note::
    All values extracted from the Pureport OpenAPI specification
    have been converted from camel case to snake case.  For instance
    to use the `findNetworks` function, it would be invoked by
    issuing `find_networks`.

Once the bindings have been created, all functions are available from the
session instance.

    .. code-block:: python

        >>> s.find_all_accounts()
        [<pureprot.bindings.models.Account object at 0x7f95cbf1e7c0>]


Finally the bindings module adds additional methods to the session object
that are generated by the query module.  These are convenience methods
generated for interfacing with the Pureport API.  Please see the
`pureport.bindings.query` module documentation for more details on
what methods are generated.
"""
import logging

from pureport.bindings import functions
from pureport.bindings import models
from pureport.bindings import query


log = logging.getLogger(__name__)


def make(session):
    """Generate bindings for OpenAPI specification

    This function will generate all model, functions and query bindings
    for the OpenAPI specificaiton retrieved from the server.  The generated
    functions and queries will be attached to the session instance.

    The models only get generated the first time this function is called.
    Subsequent calls to this function will not regenerate the model
    bindings; however, the functions and queries are generated and
    attached to the session instance.

    :param session: an instance of a Session object
    :type session: `pureport.session.Session`

    :returns: None
    """
    log.debug("attempting to make bindings for openapi spec")
    for item in (models, functions, query):
        item.make(session)
